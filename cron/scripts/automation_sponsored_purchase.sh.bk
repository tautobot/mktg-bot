#!/usr/bin/env bash
s=$BASH_SOURCE ; s=$(dirname "$s") ; s=$(cd "$s" && pwd) ; SCRIPT_HOME="$s";
a="$SCRIPT_HOME/../.."; ROOT=$(cd "$a" && pwd);

echo "ROOT PATH: $ROOT";

# Get env variables (AQA_EMAIL_TO, AQA_FROM_EMAIL)
source $ROOT/cron/scripts/.env

#echo "1. Copy config.example.py to config.py";
#CONFIG_PATH=$ROOT/config.py;
#rm $CONFIG_PATH || true;
#cp $ROOT/config_example.py $CONFIG_PATH;

#echo "2. Add some variables into config.py";
#===START Append setting to config.py
#cat >> $CONFIG_PATH <<EOL
#
## ssh on host: aqa will be run on host which is found (available and valuable) and order by docker -> release -> staging
#docker="jarvis@34.87.120.231"
#release="autoarmour@35.187.235.57"
#staging="autoarmour@35.247.189.231"
#EOL
#===END

echo "- Export PYTHONPATH";
export PYTHONPATH=$PYTHONPATH:$ROOT;

echo "- Setup pyenv Path (to run pipenv in ~/.pyenv/shims)";
export PATH="~/.pyenv/shims:$PATH";

echo "- Active virtual environment...";
cd $ROOT; pipenv sync;
source $ROOT/.venv/bin/activate;

echo "- Run sponsored_purchase.sh";
# store result to variable and print to console
exec 5>&1
RESULT=$($ROOT/testcases/sponsored_purchase/sponsored_purchase.sh | tee >(cat - >&5));
echo "[Sponsored Purchase] Result: ";
echo -e $RESULT;
echo "END sponsored_purchase.sh";

SERVICES_PATH=$ROOT/cron/services;
echo "- Send mail for automation test Sponsored Purchase...";

echo "- Collect attachments for email";
LOGS_DIR="/tmp/aqa_logs/sponsored_purchase";
ATTACHMENTS=""
if [ -d $LOGS_DIR ]
then
    ATTACHMENTS=$(find $LOGS_DIR/* -name "*" -print0 | xargs -0 echo);
fi

now=$(date);
SUBJECT="Automation Test - [Sponsored Purchase] - ($now)";
EMAIL_TO=$AQA_EMAIL_TO \
FROM_EMAIL=$AQA_FROM_EMAIL \
FROM_NAME="Automation Test Daily" \
ATTACHMENTS=$ATTACHMENTS \
$SERVICES_PATH/sendgrid.sh "$SUBJECT" "$RESULT";

echo -e "\n======= Done - Automation Test Sponsored Purchase";